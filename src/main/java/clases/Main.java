/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package clases;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.InputMismatchException;
import java.util.List;
import java.util.Scanner;
//import com.sun.org.apache.xalan.internal.xsltc.compiler.Pattern;

public class Main {
    
    public static void main (String [] args) {
    	
    	ArrayList<Libro> catalogo = new ArrayList<Libro>();
    	
    	while(true) {
    		int opcion = menu();
    		switch (opcion) {
			case 1:
				//TODO Alta de Libro
				//titulo:isbn:genero:autor:paginas
				alta(catalogo);
				break;
			case 2:
				//TODO Lista de Libros
				listarlibro(catalogo);
				break;
			case 3:
				//TODO Lista de Libros
				borrar(catalogo);
				break;
			case 4:
				//TODO Lista de Libros
				break;
			case 5:
//				ordennatural(catalogo);
				//TODO Lista de Libros
				mostrar(texto);
				break;
			case 6:
				//TODO Lista de Libros
				cargarfichero(catalogo);
				break;
			case 7:
				//TODO Lista de Libros
				escribirenfichero(catalogo);
				break;
			case 8:
				//TODO Lista de Libros
				borrarcatalogo(catalogo);
				break;
			default:
				break;
			}
    	}
    }
    
    private static int menu() {
    	int opcion=0;
    	
    	do {
    		System.out.println("Opciones:");
    		System.out.println("1. Alta de Libro");
    		System.out.println("2. Lista de Libros");
    		System.out.println("3. Baja de Libros");
    		System.out.println("4. B√∫squeda de Libros");
    		System.out.println("5. Ordenacion de Libros");
    		System.out.println("6. Cargar un fichero");
    		System.out.println("7. Escribir en un fichero");
    		System.out.println("8. Borrar cat√°logo");
    		System.out.println("Introduce la opcion:");
    	
    		opcion = leerOpcion(8);
    		
    	}while(opcion <=0);
    	
    	return opcion;
    }
    
    private static int leerOpcion(int max) {
    	int opcion = -1;
    	try {
    		Scanner teclado = new Scanner(System.in);
    		opcion=teclado.nextInt();
    		if(opcion>max)
    			opcion=-1;
    	}catch (InputMismatchException e) {
			System.out.println("Opci√≥n incorrecta");
		}
    	
    	return opcion;
    }
    
    private static void alta(ArrayList<Libro> catalogo) {
    	//Leer de la entrada
    	String datosLibro = obtenerDatosLibro();
    	//titulo:isbn:genero:autor:paginas
    	//Procesar la entrada
    	Libro libro = procesaEntrada(datosLibro);
    	//Crear el libro con los datos de la entrada
    	catalogo.add(libro);
    	//Meter el libro en el catalogo
    }
    
    private static String obtenerDatosLibro() {
    	String datos=null;
    	
    	boolean validado=false;
    	while(!validado) {
    		System.out.println("Introduce los datos de un libro.");
    		System.out.println("Usa el formato \"titulo:isbn:genero:autor:paginas\"");
    		try {
    			datos = leerCadena();
    			if(true)//Supongo de momento que valida siempre
    				validado=true;
    		}catch (InputMismatchException e) {
				System.out.println("Datos de entrada no v√°lidos");
			}
    	}
    	
    	return datos;
    }
    String texto = "El libro de la selva;1234;Antonio";
    public static boolean validaNombre_Exp(String texto) {
    	
        return texto.matches("^([A-Za-z]+[ ]?){1,5});([0-9]){0,8};([A-Z]{1}[a-z]+[ ]?){1,2}$");
    }
    
//    public static boolean validado(String datos) {
//    	boolean validado=false;
//    	Pattern pat = Pattern.compile("abc");
//        Matcher mat = pat.matcher(datos);
//        if (mat.find()) {
//            System.out.println("V·lido");                                                                            
//        } else {
//            System.out.println("No V·lido");                                                                         
//        }
//    	return validado;
//    }
//    
    private static Libro procesaEntrada(String entrada) {
    	Libro libro = null;
    	
    	String [] datos = entrada.split(":");
    	
    	String titulo = datos[0];
    	String isbn = datos[1];
    	Genero genero = Genero.getGenero(datos[2]);
    	String autor = datos[3];
    	Integer paginas = Integer.parseInt(datos[4]);
    	
    	libro = new Libro(titulo,isbn,genero,autor,paginas);
    	
    	return libro;
    }
    
    private static String leerCadena() {
    	String opcion = null;
    	Scanner teclado = new Scanner(System.in);
        opcion=teclado.nextLine();
    	return opcion;
    }
    
    public static void listarlibro(ArrayList<Libro>catalogo) {
    	for(int i=0;i<catalogo.size();i++) {
    			System.out.print(i+1+".");
    	  		Libro libro = catalogo.get(i);
    	  		System.out.println(libro);
    	  }
    	}
    
    public static void borrar(ArrayList<Libro>catalogo) {
    	int libroelegido = 0;
    	System.out.println("Elige el libro que quiere borrar:");
    	Scanner teclado = new Scanner(System.in);
			libroelegido=teclado.nextInt();
		
        libroelegido = libroelegido -1;
        catalogo.remove(libroelegido);
    	
    }
    
    public static void borrarcatalogo(ArrayList<Libro>catalogo) {
 
			for(int libros = 0;libros<catalogo.size();libros = 0) {
				catalogo.remove(libros);
			}
    }
    
//    public static void ordennatural(ArrayList<Libro>catalogo){
//    	catalogo.sort();
//	
//    }
    
    public static void escribirenfichero(ArrayList<Libro>catalogo) {
    	String seleccionado = null;
    	System.out.println("El fichero debe ser de esta estructura 'nombredefichero.txt':");
    	Scanner teclado = new Scanner(System.in);
    	seleccionado = teclado.next();
    	System.out.println("El fichero:"+seleccionado);
    	try {
  	      FileWriter myWriter = new FileWriter(seleccionado);
  	      for (Libro l: catalogo) {
  	    	  myWriter.write(l.toStringfile());
  	    	  
  	      }
  	      myWriter.close();
  	      System.out.println("Se ha escrito el fichero");
  	    } catch (IOException e) {
  	      System.out.println("ha ocurrido un error");
  	      e.printStackTrace();
  	    }
    }
    
    public static void cargarfichero(ArrayList<Libro>catalogo) {
    	String seleccionado = null;
    	System.out.println("El fichero debe ser de esta estructura 'nombredefichero.txt':");
    	Scanner teclado = new Scanner(System.in);
    	seleccionado = teclado.next();
    	System.out.println("El fichero:"+seleccionado);
    	    try {
    	      File myObj = new File(seleccionado);
    	      Scanner myReader = new Scanner(myObj);
    	      while (myReader.hasNextLine()) {
    	        String data = myReader.nextLine();
    	        Libro libro = null;
    	        String [] datos = data.split(",");
    	    	
    	    	String titulo = datos[0];
    	    	String isbn = datos[1];
    	    	Genero genero = Genero.getGenero(datos[2]);
    	    	String autor = datos[3];
    	    	Integer paginas = Integer.parseInt(datos[4]);
    	    	
    	    	libro = new Libro(titulo,isbn,genero,autor,paginas);
    	    	catalogo.add(libro);
    	      }
    	      myReader.close();
    	    } catch (FileNotFoundException e) {
    	      System.out.println("An error occurred.");
    	      e.printStackTrace();
    	    }
    }
    	
    
    	
    	

	@Override
	public String toString() {
		return "Main []";
	}
    
}
